{"version":3,"file":"static/js/45.10f97c8c.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://samurai-way/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.tsx","webpack://samurai-way/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.tsx","webpack://samurai-way/./src/components/Dialogs/SenderMessage/SenderMessage.module.css?16f7","components/Dialogs/SenderMessage/SenderMessage.tsx","selectors/dialogsSelectors.ts","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__KGl8d\",\"dialogs\":\"Dialogs_dialogs__oe96H\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"column_block\":\"Message_column_block__lYj1-\",\"user\":\"Message_user__rIrBI\",\"avatar\":\"Message_avatar__BcHJo\",\"message_block\":\"Message_message_block__e9qG+\",\"owner\":\"Message_owner__-yKxs\",\"rows_block\":\"Message_rows_block__t-dii\",\"name\":\"Message_name__tZRQw\",\"text\":\"Message_text__yBfK4\",\"time\":\"Message_time__7LIhM\"};","import React from 'react'\nimport style from \"./Message.module.css\"\n\nexport type MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n    sender: \"owner\" | \"user\"\n};\n\nexport function Message(props: MessagePropsType) {\n    const {avatar, name, message, time, sender} = props;\n\n    const styleSender = sender === \"owner\" ? style.owner : style.user;\n    return (\n        <div className={style.column_block}>\n            {sender === 'owner' && <img className={style.avatar} src={avatar} alt={\"\"}/>}\n            <div className={style.message_block  + ' ' + styleSender}>\n                <div className={style.name}>{name}</div>\n                <div className={style.text}>{message}</div>\n                <div className={style.time}>{time}</div>\n            </div>\n            {sender === 'user' && <img className={style.avatar} src={avatar} alt={\"\"}/>}\n        </div>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"Dialog_body__++WWy\",\"link\":\"Dialog_link__dXI2F\",\"active\":\"Dialog_active__RnDaX\"};","import React, {FC} from 'react'\nimport style from \"./Dialog.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nexport type DialogPropsType = {\n  id: string\n  name: string\n  avatar: string\n};\n\nexport const Dialog: FC<DialogPropsType> =\n  ({id, name, avatar}) => {\n    const path = '/dialogs/' + id;\n    return (\n      <NavLink className={style.link} activeClassName={style.active} to={path}>\n        <div className={style.body}>\n          <div><img alt={'avatar'} src={avatar}/></div>\n          <div className={style.name}>{name}</div>\n        </div>\n      </NavLink>\n    )\n  }","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"SenderMessage_content__rD7k2\"};","import React, {FC} from 'react';\nimport style from './SenderMessage.module.css';\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Button from \"@mui/material/Button\";\nimport {FormController} from \"../../common/FormController/FormController\";\n\n\nexport type FormDataSenderType = {\n  messageText: string\n}\n\nconst SenderMessage: FC<InjectedFormProps<FormDataSenderType>> =\n  ({handleSubmit}) => {\n  return (\n    <form className={style.content} onSubmit={handleSubmit}>\n      <Field\n        component={FormController}\n        name=\"messageText\"\n        placeholder='Enter you message'\n      ></Field>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        size=\"small\" endIcon={<SendIcon/>}\n        sx={{height: '38px', width: '150px', ml: 3}}\n      >\n        Send\n      </Button>\n    </form>\n  );\n}\n\nexport const SenderFormWithFom = reduxForm<FormDataSenderType>({\n  form: 'dialogs'\n})(SenderMessage);\n","import {createSelector} from \"reselect\";\nimport {StateType} from \"../redux/store\";\nimport {DialogType, MessageType} from \"../redux/dialogsReducer\";\n\nconst getDialogsHelper = (state: StateType): DialogType[] => {\n    return state.dialogsPage.dialogs;\n}\n\nexport const getDialogs = createSelector(getDialogsHelper, (dialogs: DialogType[]): DialogType[] => {\n    return dialogs;\n})\n\nconst getMessagesHelper = (state: StateType): MessageType[] => {\n    return state.dialogsPage.messages;\n}\n\nexport const getMessages = createSelector(getMessagesHelper, (messages: MessageType[]): MessageType[] => {\n    return messages;\n})","import {ComponentType} from 'react';\nimport {addMessageTC, DialogType, MessageType} from \"../../redux/dialogsReducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {StateType} from \"../../redux/store\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRedirect} from \"../../hok/withRedirect\";\nimport {getDialogs, getMessages} from \"../../selectors/dialogsSelectors\";\n\nexport type MSTPDialogsType = {\n    dialogs: DialogType[]\n    messages: MessageType[]\n}\n\nconst mapStateToProps = (state: StateType): MSTPDialogsType => ({\n    dialogs: getDialogs(state),\n    messages: getMessages(state),\n});\n\n\nexport const DialogsContainer = compose<ComponentType>(withRedirect, connect(mapStateToProps, {onClickHandler: addMessageTC}))(Dialogs);","import React, {FC} from 'react';\nimport style from './Dialogs.module.css';\nimport {Message} from \"./Message/Message\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {FormDataSenderType, SenderFormWithFom} from \"./SenderMessage/SenderMessage\";\nimport {DialogType, MessageType} from \"../../redux/dialogsReducer\";\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n\nexport type DialogsPropsType = {\n  dialogs: DialogType[]\n  messages: MessageType[]\n  onClickHandler: (messageText: string) => void\n}\n\nexport const Dialogs: FC<DialogsPropsType> =\n  ({dialogs, messages, onClickHandler}) =>\n  {\n    const onSubmit = (formData: FormDataSenderType) => {\n      const {messageText} = formData;\n      onClickHandler(messageText);\n    }\n\n    const dialogsElement = dialogs.map(d => <Dialog key={d.id} id={d.id} name={d.name} avatar={d.avatar}/>);\n    const messagesElement = messages.map(m => {\n      return (\n        <Message\n          key={m.id}\n          avatar={m.avatar}\n          name={m.name}\n          message={m.message}\n          time={m.time}\n          sender={m.sender}/>\n      );\n    });\n\n    return (\n      <Box sx={{flexGrow: 1}}>\n        <div className={style.content}>\n          <Paper sx={{mt: 4}}>\n            <div className={style.dialogs}>{dialogsElement}</div>\n          </Paper>\n\n          <Paper sx={{mt: 3}}>\n            <div className={style.messages}>\n              <div>{messagesElement}</div>\n              <SenderFormWithFom onSubmit={onSubmit}/>\n            </div>\n          </Paper>\n        </div>\n      </Box>\n    );\n  }\n"],"names":["Message","props","avatar","name","message","time","sender","styleSender","style","className","src","alt","Dialog","id","path","activeClassName","to","SenderFormWithFom","reduxForm","form","handleSubmit","onSubmit","Field","component","FormController","placeholder","Button","type","variant","size","endIcon","Send","sx","height","width","ml","getDialogs","createSelector","state","dialogsPage","dialogs","getMessages","messages","DialogsContainer","compose","withRedirect","connect","onClickHandler","addMessageTC","dialogsElement","map","d","messagesElement","m","Box","flexGrow","Paper","mt","formData","messageText"],"sourceRoot":""}