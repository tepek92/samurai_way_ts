{"version":3,"file":"static/js/39.48bf749f.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/Users.tsx","selectors/usersSelectors.ts","components/Users/UsersContainer.tsx","../node_modules/@mui/icons-material/FirstPage.js","../node_modules/@mui/icons-material/LastPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Users_content__eVkcM\",\"user\":\"Users_user__ureKU\",\"ava_btn\":\"Users_ava_btn__SNkHz\",\"btn\":\"Users_btn__VOkk+\",\"unfollow\":\"Users_unfollow__rMyqP\",\"info\":\"Users_info__QJnqb\",\"name_location\":\"Users_name_location__IIKxw\",\"name\":\"Users_name__85yu-\",\"location\":\"Users_location__j-JoU\",\"status\":\"Users_status__2SZCL\",\"pagination\":\"Users_pagination__S-sSj\",\"activePage\":\"Users_activePage__U254P\",\"navLink\":\"Users_navLink__1VyKd\"};","import React, {FC} from \"react\";\nimport s from \"./Users.module.css\"\nimport avatar from \"../../img/samurai2.png\"\nimport {UserType} from \"../../redux/usersReducer\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {NavLink} from \"react-router-dom\";\nimport {v1} from \"uuid\";\nimport Paper from \"@mui/material/Paper\";\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport Button from '@mui/material/Button';\n\ntype UsersPropsType = {\n  users: UserType[]\n  pageSize: number\n  currentPage: number\n  totalUsersCount: number\n  isFetching: boolean\n  isFollowing: number[]\n  onToggleSubscribe: (userId: number) => void\n  onClickChangeCurrentPage: (page: number) => void\n}\n\n\nexport const Users: FC<UsersPropsType> = (props) => {\n  const {\n    users,\n    pageSize,\n    currentPage,\n    totalUsersCount,\n    isFetching,\n    isFollowing,\n    onToggleSubscribe,\n    onClickChangeCurrentPage,\n  } = props;\n\n  const userElements = users.map(u => {\n    const subscribe = u.followed ? \"UNFOLLOW\" : \"FOLLOW\";\n    const styleBtn = u.followed ? \"contained\" : \"outlined\"\n    const onClickHandler = () => onToggleSubscribe(u.id);\n    return (\n      <Paper key={u.id} sx={{mb: 3}}>\n        <div className={s.user}>\n          <div className={s.ava_btn}>\n            <div>\n              <NavLink className={s.navLink} to={`profile/${u.id}`}>\n                <img alt={''} src={u.photos.small ? u.photos.small : avatar}/>\n              </NavLink>\n            </div>\n            <div>\n              <Button\n                variant={styleBtn}\n                disabled={isFollowing.some(f => f === u.id)}\n                onClick={onClickHandler}\n                size=\"small\"\n                sx={{mt: 1}}\n              >\n                {subscribe}\n              </Button>\n            </div>\n          </div>\n\n          <div className={s.info}>\n            <div className={s.name_location}>\n              <div className={s.name}>{u.name}</div>\n              <div className={s.location}>\n                <img alt={''}\n                     src={'https://www.freeiconspng.com/uploads/google-location-icon-7.png'}></img>\n                {\"Japan\"}\n              </div>\n            </div>\n            <div className={s.status}>{u.status ? u.status : \"no status\"}</div>\n          </div>\n        </div>\n      </Paper>\n    );\n  })\n\n\n  const paginationElements = [];\n  const pageMax = Math.ceil(totalUsersCount / pageSize);\n  const pageStart = currentPage - 3 <= 1 ? 1 : currentPage - 3;\n  const pageEnd = currentPage + 3 >= pageMax ? pageMax : currentPage + 3;\n\n  for (let i = pageStart; i <= pageEnd; i++) {\n    const onClickHandler = (): void => onClickChangeCurrentPage(i);\n    const style = i === currentPage ? s.activePage : '';\n    paginationElements.push(<span key={v1()} className={style} onClick={onClickHandler}>{i} </span>);\n  }\n\n  const setStartPage = (): void => {\n    onClickChangeCurrentPage(1);\n  }\n  const setEndPage = (): void => {\n    onClickChangeCurrentPage(pageMax);\n  }\n\n  return (\n    isFetching\n      ? <Preloader/>\n      : <div className={s.content}>\n        <div className={s.pagination}>\n          <span onClick={setStartPage}>\n            <FirstPageIcon fontSize=\"small\"/>\n          </span>\n          {paginationElements}\n          <span onClick={setEndPage}>\n            <LastPageIcon fontSize=\"small\"/>\n          </span>\n        </div>\n        {userElements}\n      </div>\n  );\n}\n","import {createSelector} from \"reselect\";\nimport {StateType} from \"../redux/store\";\nimport {PostType, UserProfileType} from \"../redux/profileReducer\";\nimport {UserType} from \"../redux/usersReducer\";\n\nconst getUsersHelper = (state: StateType): UserType[] => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersHelper, (users: UserType[]): UserType[] => {\n    return users;\n})\n\nconst getPageSizeHelper = (state: StateType): number => {\n    return state.usersPage.pageSize;\n}\n\nexport const getPageSizePage = createSelector(getPageSizeHelper, (pageSize: number): number => {\n    return pageSize;\n})\n\nconst getCurrentPageHelper = (state: StateType): number => {\n    return state.usersPage.currentPage;\n}\n\nexport const getCurrentPage = createSelector(getCurrentPageHelper, (currentPage: number): number => {\n    return currentPage;\n})\n\nconst getTotalUsersCountHelper = (state: StateType): number => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getTotalUsersCount = createSelector(getTotalUsersCountHelper, (totalUsersCount: number): number => {\n    return totalUsersCount;\n})\n\nconst getIsFetchingHelper = (state: StateType): boolean => {\n    return state.usersPage.isFetching;\n}\n\nexport const getIsFetching = createSelector(getIsFetchingHelper, (isFetching: boolean): boolean => {\n    return isFetching;\n})\n\nconst getIsFollowingHelper = (state: StateType): number[] => {\n    return state.usersPage.isFollowing;\n}\n\nexport const getIsFollowing = createSelector(getIsFollowingHelper, (isFollowing: number[]): number[] => {\n    return isFollowing;\n})\n\n","import React, {ComponentType} from \"react\";\nimport {connect} from \"react-redux\";\nimport {Users} from \"./Users\";\nimport {StateType} from \"../../redux/store\";\nimport {\n    changeCurrentPageAC,\n    getUsersThunkCreator,\n    subscribeToggleThunkCreator,\n    UserType\n} from \"../../redux/usersReducer\";\nimport {\n    getCurrentPage,\n    getIsFetching, getIsFollowing,\n    getPageSizePage,\n    getTotalUsersCount,\n    getUsers\n} from \"../../selectors/usersSelectors\";\nimport {compose} from \"redux\";\nimport {withRedirect} from \"../../hok/withRedirect\";\n\n\ntype UsersPropsType = MapStateToPropsType & MapDispatchToPropsType;\n// type UserResponseType = {\n//     items: UserType[]\n//     totalCount: number\n//     error: null\n// }\n\nclass UsersContainerAPI extends React.Component<UsersPropsType> {\n\n    // вызывается, когда компонента вмонтировалась в разметку\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n\n    onClickChangeCurrentPage = (page: number) => {\n        this.props.getUsers(page, this.props.pageSize);\n        this.props.changeCurrenPage(page);\n    }\n\n    subscribeToggle = (userId: number) => {\n        this.props.subscribeToggle(userId);\n    }\n\n    render() {\n        const {\n            users,\n            pageSize,\n            currentPage,\n            totalUsersCount,\n            isFetching,\n            isFollowing,\n        } = this.props;\n\n        return (\n            <Users\n                users={users}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                totalUsersCount={totalUsersCount}\n                isFetching={isFetching}\n                isFollowing={isFollowing}\n                onToggleSubscribe={this.subscribeToggle}\n                onClickChangeCurrentPage={this.onClickChangeCurrentPage}\n            />\n        );\n    }\n}\n\n\ntype MapStateToPropsType = {\n    users: UserType[]\n    pageSize: number\n    currentPage: number\n    totalUsersCount: number\n    isFetching: boolean\n    isFollowing: number[]\n}\n\ntype MapDispatchToPropsType = {\n    changeCurrenPage: (page: number) => void\n    getUsers: (page: number, pageSize: number) => void,\n    subscribeToggle: (userId: number) =>void\n}\n\nconst mapStateToProps = (state: StateType): MapStateToPropsType => ({\n    users: getUsers(state),\n    pageSize: getPageSizePage(state),\n    currentPage: getCurrentPage(state),\n    totalUsersCount: getTotalUsersCount(state),\n    isFetching: getIsFetching(state),\n    isFollowing: getIsFollowing(state)\n});\n\nexport const UsersContainer = compose<ComponentType> (\n  withRedirect,\n  connect(mapStateToProps, {\n      changeCurrenPage: changeCurrentPageAC,\n      getUsers: getUsersThunkCreator,\n      subscribeToggle: subscribeToggleThunkCreator\n  })\n)(UsersContainerAPI)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18.41 16.59 13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5.59 7.41 10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');\nexports.default = _default;"],"names":["Users","props","users","pageSize","currentPage","totalUsersCount","isFetching","isFollowing","onToggleSubscribe","onClickChangeCurrentPage","userElements","map","u","subscribe","followed","styleBtn","Paper","sx","mb","className","s","to","id","alt","src","photos","small","avatar","Button","variant","disabled","some","f","onClick","size","mt","name","status","paginationElements","pageMax","Math","ceil","pageEnd","i","style","push","v1","Preloader","FirstPage","fontSize","LastPage","getUsers","createSelector","state","usersPage","getPageSizePage","getCurrentPage","getTotalUsersCount","getIsFetching","getIsFollowing","UsersContainerAPI","page","changeCurrenPage","subscribeToggle","userId","this","React","UsersContainer","compose","withRedirect","connect","changeCurrentPageAC","getUsersThunkCreator","subscribeToggleThunkCreator","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}